#!/bin/bash


if [ "$#" -ne 2 ]; then

Â Â echo "Usage: $0 input.ndjson output.html"

Â Â exit 1

fi


INPUT="$1"

OUTPUT="$2"


FIELDS=("name" "description" "rating" "website" "phone" "review_keywords" "competitors" "status" "log")


{

echo "<!DOCTYPE html>

<html>

<head>

Â Â <meta charset=\"UTF-8\">

Â Â <title>JSON Data Table</title>

Â Â <style>

	@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&display=swap');


	table { border-collapse: collapse; width: 100%;color: #343231; }

Â Â Â Â 	th, td { border: 1px solid #ccc; padding: 8px; text-align: left; vertical-align: top; }

Â Â Â Â 	th { background-color: #f4f4f4; }

Â Â Â Â 	a { text-decoration: none; color: blue; }

Â Â Â Â 	input[type='text'] { width: 100%; box-sizing: border-box; }


	body {

	Â  font-family: 'Montserrat', sans-serif;

   margin: 20px; font-size: 16px;

	Â  background-color: #FAF9F6;

	Â  color: #343231;

	}


	.topbar {

	Â  display: flex;

	Â  justify-content: flex-end; /* Button right aligned */

	Â  align-items: center;

	Â  margin-bottom: 12px;

	Â  background: #ffffff;

	Â  padding: 10px 20px;

	Â  border-radius: 8px;

	Â  box-shadow: 0 2px 8px rgba(0,0,0,0.1);

	Â  gap: 15px; /* space between message and button */

	}


	.save-button {

	Â  padding: 10px 20px;

	Â  background-color: #0078D7;

	Â  color: white;

	Â  border: none;

	Â  cursor: pointer;

	Â  border-radius: 6px;

	Â  font-size: 16px;

	Â  font-weight: 600;

	Â  transition: background-color 0.25s ease;

	Â  box-shadow: 0 4px 6px rgba(0,120,215,0.4);

	}

	.save-button:hover {

	Â  background-color: #005ea6;

	}


	#save-location {

	Â  font-size: 0.95em;

	Â  color: #444;

	Â  font-weight: 500;

	Â  text-align: right;

	Â  flex-grow: 1;Â  /* take all space left of button */

	Â  user-select: none;

	}


	td.log-column {

	width: 30%;

	}

	.log-history {

	font-size: 0.9em;

	margin-top: 6px;

	color: #555;

	white-space: pre-line;

	max-height: 200px;

	overflow-y: auto;

	border: 1px solid #ddd;

	padding: 6px;

	background: #f9f9f9;

	white-space: pre-wrap;

	min-height: 80px;

	}

Â Â </style>

</head>

<body>

<div class=\"topbar\">

Â Â <div id=\"save-location\"></div>

Â Â <button class=\"save-button\" onclick=\"savePage()\">ðŸ’¾ Save Page</button>

</div>

Â Â <h2>Personal Reachout Workspace by Dara at Keiste</h2>

Â Â <table id=\"data-table\">

Â Â Â Â <tr>"

for field in "${FIELDS[@]}"; do

Â Â header=$(echo "$field" | awk '{print toupper(substr($0,1,1)) substr($0,2)}')

Â Â echo "Â  Â  Â  <th>$header</th>"

done

echo "Â  Â  </tr>"

} > "$OUTPUT"


jq -c '.' "$INPUT" | while read -r row; do

Â Â key=$(echo "$row" | jq -r '.name' | sed 's/[^a-zA-Z0-9_-]/_/g')


Â Â echo "Â  Â  <tr data-key=\"$key\">" >> "$OUTPUT"

Â Â for field in "${FIELDS[@]}"; do

Â Â Â Â td_class=""

Â Â Â Â case "$field" in

Â Â Â Â Â Â "website")

Â Â Â Â Â Â Â Â value=$(echo "$row" | jq -r '.website // ""')

Â Â Â Â Â Â Â Â domain=$(echo "$value" | awk -F/ '{print $3}')

Â Â Â Â Â Â Â Â favicon="https://www.google.com/s2/favicons?sz=16&domain=$domain"

Â Â Â Â Â Â Â Â html="<a href=\"$value\" target=\"_blank\"><img src=\"$favicon\" alt=\"favicon\" style=\"vertical-align:middle;margin-right:4px;\">Visit</a>"

Â Â Â Â Â Â Â ;;

Â Â Â Â Â Â "phone")

Â Â Â Â Â Â Â Â value=$(echo "$row" | jq -r '.phone // ""')

Â Â Â Â Â Â Â Â digits_only=$(echo "$value" | sed -E 's/[^0-9]//g')

Â Â Â Â Â Â Â Â formatted_number=$(echo "$digits_only" | sed -E 's/^0*//')

Â Â Â Â Â Â Â Â tel_link="tel:00353${formatted_number}"

Â Â Â Â Â Â Â Â html="<a href=\"$tel_link\">Call</a>"

Â Â Â Â Â Â Â Â ;;

Â Â Â Â Â Â "review_keywords")

Â Â Â Â Â Â Â Â html=$(echo "$row" | jq -r '.review_keywords // [] | map("\(.keyword) (\(.count))") | join(", ")')

Â Â Â Â Â Â Â Â ;;

Â Â Â Â Â Â "competitors")

Â Â Â Â Â Â Â Â html=$(echo "$row" | jq -r '.competitors // [] | map(.name) | join(", ")')

Â Â Â Â Â Â Â Â ;;

Â Â Â Â Â Â "status")

Â Â Â Â Â Â Â Â html="<select class=\"status-select\">

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <option value=\"open\">Open</option>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <option value=\"connected\">Connected</option>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <option value=\"call back\">Call Back</option>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <option value=\"not interested\">Not Interested</option>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â </select>"

Â Â Â Â Â Â Â Â ;;

Â Â Â Â Â Â "log")

Â Â Â Â Â Â Â Â td_class="log-column"

Â Â Â Â Â Â Â Â html="<input type=\"text\" placeholder=\"Add log and press return...\" class=\"log-input\" autocomplete=\"off\" />

Â Â Â Â Â Â Â Â Â Â Â Â Â Â <div class=\"log-history\"></div>"

Â Â Â Â Â Â Â Â ;;

Â Â Â Â Â Â *)

Â Â Â Â Â Â Â Â value=$(echo "$row" | jq -r --arg f "$field" '.[$f] // ""')

Â Â Â Â Â Â Â Â html="$value"

Â Â Â Â Â Â Â Â ;;

Â Â Â Â esac

    Â Â Â Â Â Â Â Â ;;

Â Â Â Â Â Â *)

Â Â Â Â Â Â Â Â value=$(echo "$row" | jq -r --arg f "$field" '.[$f] // ""')

Â Â Â Â Â Â Â Â html="$value"

Â Â Â Â Â Â Â Â ;;

Â Â Â Â esac

Â Â Â Â echo "Â  Â  Â  <td class=\"$td_class\">$html</td>" >> "$OUTPUT"

Â Â done

Â Â echo "Â  Â  </tr>" >> "$OUTPUT"

done


cat <<'EOF' >> "$OUTPUT"

Â Â </table>


<script>

Â Â Â Â 

// Load saved data from localStorage and populate fields

function loadData() {

Â Â const rows = document.querySelectorAll("#data-table tr[data-key]");

Â Â rows.forEach(row => {

Â Â Â Â const key = row.getAttribute("data-key");

Â Â Â Â if (!key) return;


Â Â Â Â // Load status

Â Â Â Â const statusSelect = row.querySelector("select.status-select");

Â Â Â Â const savedStatus = localStorage.getItem(key + "_status");

Â Â Â Â if (statusSelect && savedStatus) {

Â Â Â Â Â Â statusSelect.value = savedStatus;

Â Â Â Â }


Â Â Â Â // Load log history

Â Â Â Â const logHistory = row.querySelector(".log-history");

Â Â Â Â if (logHistory) {

Â Â Â Â Â Â const savedLog = localStorage.getItem(key + "_log");

Â Â Â Â Â Â if (savedLog) {

Â Â Â Â Â Â Â Â logHistory.innerText = savedLog;

Â Â Â Â Â Â }

Â Â Â Â }

Â Â });

}
}


// Save status to localStorage on change

function setupStatusListeners() {

Â Â const selects = document.querySelectorAll("select.status-select");

Â Â selects.forEach(select => {

Â Â Â Â select.addEventListener("change", e => {

Â Â Â Â Â Â const row = e.target.closest("tr");

Â Â Â Â Â Â const key = row.getAttribute("data-key");

Â Â Â Â Â Â if (key) {

Â Â Â Â Â Â Â Â localStorage.setItem(key + "_status", e.target.value);

Â Â Â Â Â Â }

Â Â Â Â });

Â Â });

}


// Add log entry with timestamp and save to localStorage

function addLog(inputEl) {

Â Â const row = inputEl.closest("tr");

Â Â const key = row.getAttribute("data-key");

Â Â const logDiv = inputEl.nextElementSibling;

Â Â const newText = inputEl.value.trim();

Â Â if (newText && key) {

Â Â Â Â const timestamp = new Date().toLocaleString();

Â Â Â Â // Append new entry with timestamp and newline

Â Â Â Â let existingLogs = localStorage.getItem(key + "_log") || "";

Â Â Â Â existingLogs += `${timestamp}: ${newText}\n`;

Â Â Â Â localStorage.setItem(key + "_log", existingLogs);

Â Â Â Â // Update the visible log immediately

Â Â Â Â logDiv.innerText = existingLogs;

Â Â Â Â inputEl.value = "";

Â Â }

}
Â Â Â Â // Update the visible log immediately

Â Â Â Â logDiv.innerText = existingLogs;

Â Â Â Â inputEl.value = "";

Â Â }

}


// Setup log input enter key to add log instantly

function setupLogInputs() {

Â Â const inputs = document.querySelectorAll("input.log-input");

Â Â inputs.forEach(input => {

Â Â Â Â input.addEventListener("keydown", e => {

Â Â Â Â Â Â if (e.key === "Enter") {

Â Â Â Â Â Â Â Â e.preventDefault();

Â Â Â Â Â Â Â Â addLog(e.target);

Â Â Â Â Â Â }

Â Â Â Â });

Â Â });

}

function savePage() {

Â Â const htmlContent = "<!DOCTYPE html>\n" + document.documentElement.outerHTML;

Â Â const blob = new Blob([htmlContent], { type: 'text/html' });

Â Â const link = document.createElement('a');

Â Â const filename = location.pathname.split("/").pop() || "data.html";

Â Â link.href = URL.createObjectURL(blob);

Â Â link.download = filename;

Â Â link.click();


Â Â const infoDiv = document.getElementById("save-location");

Â Â infoDiv.textContent = `Backup page saved in your browser's downloads folder)`;

}


Â Â document.addEventListener("DOMContentLoaded", () => {

Â Â Â Â loadData();

Â Â Â Â setupStatusListeners();

Â Â Â Â setupLogInputs();

Â Â });

Â Â 

</script>

</body>

</html>

EOF
